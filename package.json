{
  "name": "agile-form",
  "version": "0.0.374",
  "description": "Reusable form builder with support for (richt-)text, code, selections, numbers, dates and so on.",
  "keywords": [
    "component",
    "form",
    "react",
    "web",
    "webcomponent",
    "web-component"
  ],
  "homepage": "https://torben.website/agile-form",
  "bugs": {
    "email": "info@torben.website",
    "url": "https://github.com/thaibault/agile-form/issues"
  },
  "license": "CC-BY-3.0",
  "author": {
    "name": "Torben Sickert",
    "email": "info@torben.website",
    "url": "https://torben.website"
  },
  "files": [
    "index.bundle.js",
    "index.css",
    "index.d.ts",
    "index.js",
    "styles.bundle.css",
    "type.d.ts"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/thaibault/agile-form"
  },
  "scripts": {
    "build": "yarn build:types; yarn build:plain && yarn build:bundle",
    "build:bundle": "yarn build:types; yarn build:bundle:plain",
    "build:bundle:plain": "weboptimizer build '{__reference__: \"target:bundle\"}'",
    "build:plain": "weboptimizer build",
    "build:types": "weboptimizer build:types",
    "check": "yarn check:types; yarn lint",
    "check:types": "yarn clear && weboptimizer check:types",
    "clear": "weboptimizer clear && rimraf styles.bundle.css",
    "document": "weboptimizer document",
    "lint": "weboptimizer lint",
    "patch": "for path in patches/*.patch; do target_file_path=\"$(echo \"$path\" | sed --regexp-extended 's/patches\\/([^/]+).patch$/\\1/' | sed 's:\\+:/:g')\"; source_file_path=\"$path\"; echo \"Patch file \\\"$target_file_path\\\" with \\\"$source_file_path\\\".\"; patch --forward --input \"$source_file_path\" --reject-file - \"$target_file_path\"; done; true",
    "prepare": "yarn build",
    "postinstall": "yarn patch || true",
    "postversion": "yarn publish --non-interactive; git push --tags && git push",
    "serve": "weboptimizer serve",
    "serve:simple": "yarn serve '{files: {defaultHTML: {filename: \"examples/simple.html\"}}}'",
    "start": "yarn serve",
    "test": "yarn clear && weboptimizer test",
    "test:browser": "yarn clear && weboptimizer test:browser",
    "test:coverage": "yarn clear && weboptimizer test:coverage",
    "test:coverage:report": "yarn clear && weboptimizer test:coverage:report",
    "update": "yarn version --patch",
    "update:documentation": "documentation-website",
    "watch": "weboptimizer build --watch"
  },
  "devDependencies": {
    "@babel/eslint-parser": "*",
    "@rmwc/card": "*",
    "@rmwc/checkbox": "*",
    "@rmwc/circular-progress": "*",
    "@rmwc/formfield": "*",
    "@rmwc/icon": "*",
    "@rmwc/icon-button": "*",
    "@rmwc/select": "*",
    "@rmwc/slider": "*",
    "@rmwc/tabs": "*",
    "@rmwc/textfield": "*",
    "@rmwc/theme": "*",
    "@rmwc/tooltip": "*",
    "@rmwc/typography": "*",
    "@tinymce/tinymce-react": "*",
    "@types/ejs": "*",
    "@types/grecaptcha": "*",
    "@types/html-minifier": "*",
    "@types/jquery": "*",
    "@types/jsdom": "*",
    "@types/node": "*",
    "@types/react": "*",
    "@types/react-dom": "*",
    "@types/react-transition-group": "*",
    "@types/webpack-env": "*",
    "@typescript-eslint/eslint-plugin": "*",
    "@typescript-eslint/parser": "*",
    "@webcomponents/webcomponentsjs": "*",
    "blob-util": "*",
    "clientnode": "*",
    "css-loader": "*",
    "cssnano": "*",
    "documentation-website": "*",
    "eslint": "*",
    "eslint-config-google": "*",
    "eslint-plugin-jsdoc": "*",
    "identity-obj-proxy": "*",
    "jest": "*",
    "jest-canvas-mock": "*",
    "jsdoc": "*",
    "material-icons": "*",
    "mini-css-extract-plugin": "*",
    "node-fetch": "*",
    "postcss": "*",
    "postcss-loader": "*",
    "postcss-preset-env": "*",
    "prop-types": "*",
    "react-ace": "*",
    "react-generic-dummy": "*",
    "rimraf": "*",
    "style-loader": "*",
    "tslib": "*",
    "web-component-wrapper": "*",
    "web-input-material": "*",
    "weboptimizer": "*",
    "webpack-dev-server": "*"
  },
  "peerDependencies": {
    "@babel/runtime": "*",
    "clientnode": "*",
    "node-fetch": "*"
  },
  "peerDependenciesMeta": {
    "@babel/runtime": {
      "optional": true
    },
    "node-fetch": {
      "optional": true
    }
  },
  "engines": {
    "node": ">=19",
    "npm": ">=8"
  },
  "resolutions": {
    "colors": "1.4.0"
  },
  "sideEffects": false,
  "documentationWebsite": {
    "tagline": "Build flexible agnostic forms.",
    "trackingCode": "TODO"
  },
  "webOptimizer": {
    "commandLine": {
      "test": {
        "environments": [
          "jsdom"
        ]
      }
    },
    "generic": {
      "supportedBrowsers": [
        "IE >= 11",
        "last 2 versions",
        "> 5%"
      ]
    },
    "injection": {
      "entry": {
        "__evaluate__": "2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2].startsWith('test') ? {testBundle: './test.ts'} : 2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2] === 'serve' ? {index: './index', styles: './index.css'} : './index'"
      }
    },
    "module": {
      "aliases": {
        "#": "Remove unneeded optional dependencies.",
        "@tinymce/tinymce-react$": "react-generic-dummy",
        "jquery$": false,
        "#1": "Triggers error in debug mode:",
        "#2": "ace-builds$: false",
        "#3": "@tinymce/tinymce-react$: false",
        "#4": "react-ace$: false",
        "#5": "react-useanimations$: false",
        "#6": "react-useanimations/lib/lock$: false",
        "#7": "Improve build performance.",
        "ace-builds$": "react-generic-dummy",
        "formdata-polyfill/esm.min.js$": "formdata-polyfill",
        "react-ace$": "react-generic-dummy",
        "react-useanimations$": "react-generic-dummy",
        "react-useanimations/lib/lock$": "react-generic-dummy",
        "react-useanimations/lib/plusToX$": "react-generic-dummy",
        "web-input-material/components/GenericInput$": "web-input-material/components/GenericInput.bundle"
      },
      "enforceDeduplication": true,
      "html": {
        "options": {
          "sources": {
            "urlFilter": {
              "__evaluate__": "() => false"
            }
          }
        }
      },
      "optimizer": {
        "babelMinify": {
          "#": "To provide a logging output we need to exclude this feature. NOTE: We currently have to disable module based compress to avoid e.g. this traceback: \"Cannot read properties of undefined (reading 'add') at ScopeTracker.addReference\".",
          "__evaluate__": "self.debug ? {bundle: null, module: null} : {bundle: {transform: {removeConsole: false}}, module: null}"
        }
      }
    },
    "target:bundle": {
      "files": {
        "compose": {
          "cascadingStyleSheet": {
            "__evaluate__": "`${path.resolve(self.path.target.asset.cascadingStyleSheet, '[name].bundle')}.css`"
          },
          "javaScript": {
            "__evaluate__": "`${path.resolve(self.path.target.asset.javaScript, '[name].bundle')}.js`"
          }
        }
      },
      "injection": {
        "entry": {
          "__evaluate__": "{index: './index', styles: './index.css'}"
        }
      },
      "inPlace": {
        "externalLibrary": {
          "dynamic": true,
          "normal": true
        }
      },
      "module": {
        "preprocessor": {
          "javaScript": {
            "options": {
              "plugins": {
                "__remove__": "@babel/plugin-transform-runtime"
              }
            }
          }
        }
      }
    },
    "test": {
      "injection": {
        "external": {
          "implicit": {
            "pattern": {
              "exclude": {
                "#": "NOTE: Theses files are ECMAscript file so have to be processed to work with test-runner.",
                "__append__": [
                  {
                    "__evaluate__": "/^(.+\\/)?data-uri-to-buffer(\\/.+)?$/"
                  },
                  {
                    "__evaluate__": "/^(.+\\/)?fetch-blob(\\/.+)?$/"
                  },
                  {
                    "__evaluate__": "/^(.+\\/)?node-fetch(\\/.+)?$/"
                  }
                ]
              }
            }
          }
        }
      }
    }
  }
}
