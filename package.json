{
  "name": "agile-form",
  "version": "0.0.415",
  "description": "Reusable form builder with support for (richt-)text, code, selections, numbers, dates and so on.",
  "keywords": [
    "component",
    "form",
    "react",
    "web",
    "webcomponent",
    "web-component"
  ],
  "homepage": "https://torben.website/agile-form",
  "bugs": {
    "email": "info@torben.website",
    "url": "https://github.com/thaibault/agile-form/issues"
  },
  "license": "CC-BY-3.0",
  "author": {
    "name": "Torben Sickert",
    "email": "info@torben.website",
    "url": "https://torben.website"
  },
  "files": [
    "index.bundle.js",
    "index.css",
    "index.d.ts",
    "index.js",
    "styles.bundle.css",
    "type.d.ts"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/thaibault/agile-form"
  },
  "scripts": {
    "build": "yarn build:types; yarn build:plain && yarn build:bundle",
    "build:bundle": "yarn build:types; yarn build:bundle:plain",
    "build:bundle:plain": "weboptimizer build '{__reference__: \"target:bundle\"}'",
    "build:plain": "weboptimizer build",
    "build:types": "weboptimizer build:types",
    "check": "yarn check:types; yarn lint",
    "check:types": "yarn clear && weboptimizer check:types",
    "clear": "weboptimizer clear && rimraf styles.bundle.css",
    "document": "weboptimizer document",
    "lint": "weboptimizer lint",
    "patch": "for path in patches/*.patch; do target_file_path=\"$(echo \"$path\" | sed --regexp-extended 's/patches\\/([^/]+).patch$/\\1/' | sed 's:\\+:/:g')\"; source_file_path=\"$path\"; echo \"Patch file \\\"$target_file_path\\\" with \\\"$source_file_path\\\".\"; patch --forward --input \"$source_file_path\" --reject-file - \"$target_file_path\"; done; true",
    "prepare": "yarn build",
    "postinstall": "yarn patch || true",
    "postversion": "yarn publish --non-interactive; git push --tags && git push",
    "serve": "weboptimizer serve",
    "serve:simple": "yarn serve '{files: {defaultHTML: {filename: \"examples/simple.html\"}}}'",
    "start": "yarn serve",
    "test": "yarn clear && weboptimizer test",
    "test:browser": "yarn clear && weboptimizer test:browser",
    "test:coverage": "yarn clear && weboptimizer test:coverage",
    "test:coverage:report": "yarn clear && weboptimizer test:coverage:report",
    "update": "yarn version patch && yarn npm publish",
    "update:documentation": "documentation-website",
    "watch": "weboptimizer build --watch"
  },
  "devDependencies": {
    "@babel/eslint-parser": "^7.23.10",
    "@babel/runtime": "^7.24.0",
    "@rmwc/card": "^14.0.11",
    "@rmwc/checkbox": "^14.0.11",
    "@rmwc/circular-progress": "^14.0.11",
    "@rmwc/formfield": "^14.0.11",
    "@rmwc/icon": "^14.0.11",
    "@rmwc/icon-button": "^14.0.11",
    "@rmwc/select": "^14.0.11",
    "@rmwc/slider": "^14.0.11",
    "@rmwc/tabs": "^14.0.11",
    "@rmwc/textfield": "^14.0.11",
    "@rmwc/theme": "^14.0.11",
    "@rmwc/tooltip": "^14.0.11",
    "@rmwc/touch-target": "^14.0.11",
    "@rmwc/typography": "^14.0.11",
    "@tinymce/tinymce-react": "^4.3.2",
    "@types/ejs": "^3.1.5",
    "@types/grecaptcha": "^3.0.8",
    "@types/html-minifier": "^4.0.5",
    "@types/jquery": "^3.5.29",
    "@types/jsdom": "^21.1.6",
    "@types/node": "^20.11.24",
    "@types/react": "^18.2.61",
    "@types/react-dom": "^18.2.19",
    "@types/react-transition-group": "^4.4.10",
    "@types/webpack-env": "^1.18.4",
    "@typescript-eslint/eslint-plugin": "^7.1.0",
    "@typescript-eslint/parser": "^7.1.0",
    "@webcomponents/webcomponentsjs": "^2.8.0",
    "blob-util": "^2.0.2",
    "clientnode": "^3.0.1136",
    "css-loader": "^6.10.0",
    "cssnano": "^6.0.5",
    "documentation-website": "^1.0.326",
    "eslint": "^8.57.0",
    "eslint-config-google": "^0.14.0",
    "eslint-plugin-jsdoc": "^48.2.0",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-canvas-mock": "^2.5.2",
    "jsdoc": "^4.0.2",
    "material-components-web": "^14.0.0",
    "material-icons": "^1.13.12",
    "mini-css-extract-plugin": "^2.8.1",
    "node-fetch": "^3.3.2",
    "postcss": "^8.4.35",
    "postcss-loader": "^8.1.1",
    "postcss-preset-env": "^9.4.0",
    "prop-types": "^15.8.1",
    "react-ace": "^10.1.0",
    "react-generic-dummy": "^0.0.68",
    "rimraf": "^5.0.5",
    "style-loader": "^3.3.4",
    "tslib": "^2.6.2",
    "web-component-wrapper": "^0.0.484",
    "web-input-material": "^0.0.434",
    "weboptimizer": "^2.0.1452",
    "webpack-dev-server": "^5.0.2"
  },
  "peerDependencies": {
    "@babel/runtime": "*",
    "clientnode": "*",
    "node-fetch": "*"
  },
  "peerDependenciesMeta": {
    "@babel/runtime": {
      "optional": true
    },
    "node-fetch": {
      "optional": true
    }
  },
  "engines": {
    "node": ">=20",
    "npm": ">=10",
    "yarn": ">=4"
  },
  "resolutions": {
    "colors": "1.4.0"
  },
  "sideEffects": false,
  "documentationWebsite": {
    "tagline": "Build flexible agnostic forms.",
    "trackingCode": "TODO"
  },
  "webOptimizer": {
    "commandLine": {
      "test": {
        "environments": [
          "jsdom"
        ]
      }
    },
    "generic": {
      "supportedBrowsers": [
        "IE >= 11",
        "last 2 versions",
        "> 5%"
      ]
    },
    "injection": {
      "entry": {
        "__evaluate__": "2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2].startsWith('test') ? {testBundle: './test.ts'} : 2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2] === 'serve' ? {index: './index', styles: './index.css'} : './index'"
      }
    },
    "module": {
      "aliases": {
        "#": "Remove unneeded optional dependencies.",
        "@tinymce/tinymce-react$": "react-generic-dummy",
        "jquery$": false,
        "#1": "Triggers error in debug mode:",
        "#2": "ace-builds$: false",
        "#3": "@tinymce/tinymce-react$: false",
        "#4": "react-ace$: false",
        "#5": "react-useanimations$: false",
        "#6": "react-useanimations/lib/lock$: false",
        "#7": "Improve build performance.",
        "ace-builds$": "react-generic-dummy",
        "formdata-polyfill/esm.min.js$": "formdata-polyfill",
        "react-ace$": "react-generic-dummy",
        "react-useanimations$": "react-generic-dummy",
        "react-useanimations/lib/lock$": "react-generic-dummy",
        "react-useanimations/lib/plusToX$": "react-generic-dummy",
        "web-input-material/components/TextInput$": "web-input-material/components/TextInput.bundle"
      },
      "enforceDeduplication": true,
      "html": {
        "options": {
          "sources": {
            "urlFilter": {
              "__evaluate__": "() => false"
            }
          }
        }
      },
      "optimizer": {
        "babelMinify": {
          "#": "To provide a logging output we need to exclude this feature. NOTE: We currently have to disable module based compress to avoid e.g. this traceback: \"Cannot read properties of undefined (reading 'add') at ScopeTracker.addReference\".",
          "__evaluate__": "self.debug ? {bundle: null, module: null} : {bundle: {transform: {removeConsole: false}}, module: null}"
        }
      }
    },
    "target:bundle": {
      "files": {
        "compose": {
          "cascadingStyleSheet": {
            "__evaluate__": "`${path.resolve(self.path.target.asset.cascadingStyleSheet, '[name].bundle')}.css`"
          },
          "javaScript": {
            "__evaluate__": "`${path.resolve(self.path.target.asset.javaScript, '[name].bundle')}.js`"
          }
        }
      },
      "injection": {
        "entry": {
          "__evaluate__": "{index: './index', styles: './index.css'}"
        }
      },
      "inPlace": {
        "externalLibrary": {
          "dynamic": true,
          "normal": true
        }
      },
      "module": {
        "preprocessor": {
          "javaScript": {
            "options": {
              "plugins": {
                "__remove__": "@babel/plugin-transform-runtime"
              }
            }
          }
        }
      }
    },
    "test": {
      "injection": {
        "external": {
          "implicit": {
            "pattern": {
              "exclude": {
                "#": "NOTE: Theses files are ECMAscript file so have to be processed to work with test-runner.",
                "__append__": [
                  {
                    "__evaluate__": "/^(.+\\/)?data-uri-to-buffer(\\/.+)?$/"
                  },
                  {
                    "__evaluate__": "/^(.+\\/)?fetch-blob(\\/.+)?$/"
                  },
                  {
                    "__evaluate__": "/^(.+\\/)?node-fetch(\\/.+)?$/"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "webpack": {
      "snapshot": {
        "unmanagedPaths": [
          {
            "__evaluate__": "/^.+?[\\/]node_modules[\\/]clientnode[\\/]/"
          },
          {
            "__evaluate__": "/^.+?[\\/]node_modules[\\/]react-generic-(animate|dummy|tools)[\\/]/"
          },
          {
            "__evaluate__": "/^.+?[\\/]node_modules[\\/](react|web)-input-material[\\/]/"
          },
          {
            "__evaluate__": "/^.+?[\\/]node_modules[\\/]web-component-wrapper[\\/]/"
          }
        ]
      },
      "watchOptions": {
        "ignored": {
          "__remove__": "**/node_modules"
        }
      }
    }
  },
  "packageManager": "yarn@4.1.0+sha256.81a00df816059803e6b5148acf03ce313cad36b7f6e5af6efa040a15981a6ffb"
}
